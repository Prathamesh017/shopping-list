{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst shopSlice = createSlice({\n  name: \"shop\",\n  initialState: {\n    toAdd: false,\n    itemlist: [],\n    showList: []\n  },\n  reducers: {\n    setToAdd: state => {\n      state.toAdd = !state.toAdd;\n    },\n    addTOList: (state, action) => {\n      console.log(action.payload);\n      state.itemlist.push({\n        name: action.payload.name,\n        area: action.payload.area,\n        category: action.payload.category,\n        openDate: action.payload.openDate,\n        closeDate: action.payload.closeDate\n      });\n      state.showItems += state.itemlist;\n      console.log(state.showList);\n    },\n    deleteToList: (state, action) => {\n      const deleted = action.payload.name; // const deleted=action.payload;\n\n      state.itemlist = state.itemlist.filter(item => item.name !== deleted);\n      console.log(deleted);\n    },\n    searchtoList: (state, action) => {\n      const searchKey = action.payload.toLowerCase();\n      const showItems = state.itemlist;\n\n      if (searchKey.length === 0) {//    state.itemlist=searchList;\n      } else {\n        state.itemlist = state.itemlist.filter(item => {\n          console.log(item.area.toLowerCase().includes(searchKey));\n          return item.area.toLowerCase().includes(searchKey) || item.category.toLowerCase().includes(searchKey) || item.name.toLowerCase().includes(searchKey);\n        });\n      }\n    }\n  }\n});\nexport const {\n  setToAdd,\n  addTOList,\n  deleteToList,\n  searchtoList\n} = shopSlice.actions;\nexport default shopSlice.reducer;","map":{"version":3,"sources":["C:/Users/pt/Desktop/React Projects/Shopping List/src/Store/shopslice.jsx"],"names":["createSlice","shopSlice","name","initialState","toAdd","itemlist","showList","reducers","setToAdd","state","addTOList","action","console","log","payload","push","area","category","openDate","closeDate","showItems","deleteToList","deleted","filter","item","searchtoList","searchKey","toLowerCase","length","includes","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,SAAS,GAACD,WAAW,CAAC;AACxBE,EAAAA,IAAI,EAAC,MADmB;AAExBC,EAAAA,YAAY,EAAC;AAACC,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,QAAQ,EAAC,EAAtB;AAAyBC,IAAAA,QAAQ,EAAC;AAAlC,GAFW;AAGxBC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,QAAQ,EAAEC,KAAD,IAAS;AAACA,MAAAA,KAAK,CAACL,KAAN,GAAY,CAACK,KAAK,CAACL,KAAnB;AAAyB,KADvC;AAELM,IAAAA,SAAS,EAAC,CAACD,KAAD,EAAOE,MAAP,KAAgB;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;AACvBL,MAAAA,KAAK,CAACJ,QAAN,CAAeU,IAAf,CAAoB;AAChBb,QAAAA,IAAI,EAACS,MAAM,CAACG,OAAP,CAAeZ,IADJ;AAEhBc,QAAAA,IAAI,EAACL,MAAM,CAACG,OAAP,CAAeE,IAFJ;AAGhBC,QAAAA,QAAQ,EAACN,MAAM,CAACG,OAAP,CAAeG,QAHR;AAIhBC,QAAAA,QAAQ,EAACP,MAAM,CAACG,OAAP,CAAeI,QAJR;AAKhBC,QAAAA,SAAS,EAACR,MAAM,CAACG,OAAP,CAAeK;AALT,OAApB;AAOCV,MAAAA,KAAK,CAACW,SAAN,IAAiBX,KAAK,CAACJ,QAAvB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACH,QAAlB;AAEJ,KAbI;AAcLe,IAAAA,YAAY,EAAC,CAACZ,KAAD,EAAOE,MAAP,KAAgB;AACzB,YAAOW,OAAO,GAAEX,MAAM,CAACG,OAAP,CAAeZ,IAA/B,CADyB,CAEzB;;AAEAO,MAAAA,KAAK,CAACJ,QAAN,GAAeI,KAAK,CAACJ,QAAN,CAAekB,MAAf,CAAuBC,IAAD,IAAQA,IAAI,CAACtB,IAAL,KAAYoB,OAA1C,CAAf;AAEAV,MAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ;AACH,KArBI;AAsBLG,IAAAA,YAAY,EAAC,CAAChB,KAAD,EAAOE,MAAP,KAAgB;AACzB,YAAMe,SAAS,GAACf,MAAM,CAACG,OAAP,CAAea,WAAf,EAAhB;AACA,YAAMP,SAAS,GAACX,KAAK,CAACJ,QAAtB;;AACD,UAAGqB,SAAS,CAACE,MAAV,KAAmB,CAAtB,EAAwB,CACvB;AACA,OAFD,MAGI;AACLnB,QAAAA,KAAK,CAACJ,QAAN,GAAeI,KAAK,CAACJ,QAAN,CAAekB,MAAf,CAAuBC,IAAD,IAAQ;AACzCZ,UAAAA,OAAO,CAACC,GAAR,CAAYW,IAAI,CAACR,IAAL,CAAUW,WAAV,GAAwBE,QAAxB,CAAiCH,SAAjC,CAAZ;AACA,iBAAOF,IAAI,CAACR,IAAL,CAAUW,WAAV,GAAwBE,QAAxB,CAAiCH,SAAjC,KAA8CF,IAAI,CAACP,QAAL,CAAcU,WAAd,GAA4BE,QAA5B,CAAqCH,SAArC,CAA9C,IAAgGF,IAAI,CAACtB,IAAL,CAAUyB,WAAV,GAAwBE,QAAxB,CAAiCH,SAAjC,CAAvG;AACD,SAHY,CAAf;AAID;AACA;AAlCI;AAHe,CAAD,CAA3B;AA4CA,OAAO,MAAM;AAAClB,EAAAA,QAAD;AAAUE,EAAAA,SAAV;AAAoBW,EAAAA,YAApB;AAAiCI,EAAAA;AAAjC,IAAgDxB,SAAS,CAAC6B,OAAhE;AACP,eAAe7B,SAAS,CAAC8B,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst shopSlice=createSlice({\r\n    name:\"shop\",\r\n    initialState:{toAdd:false,itemlist:[],showList:[]},\r\n    reducers:{\r\n        setToAdd:(state)=>{state.toAdd=!state.toAdd},\r\n        addTOList:(state,action)=>{console.log(action.payload)\r\n            state.itemlist.push({\r\n                name:action.payload.name,\r\n                area:action.payload.area,\r\n                category:action.payload.category,\r\n                openDate:action.payload.openDate,\r\n                closeDate:action.payload.closeDate,\r\n            })\r\n             state.showItems+=state.itemlist;\r\n             console.log(state.showList);\r\n           \r\n        },\r\n        deleteToList:(state,action)=>{\r\n            const  deleted =action.payload.name;\r\n            // const deleted=action.payload;\r\n\r\n            state.itemlist=state.itemlist.filter((item)=>item.name!==deleted);\r\n\r\n            console.log(deleted);\r\n        },\r\n        searchtoList:(state,action)=>{\r\n            const searchKey=action.payload.toLowerCase();\r\n            const showItems=state.itemlist;\r\n           if(searchKey.length===0){\r\n            //    state.itemlist=searchList;\r\n           }\r\n           else{\r\n          state.itemlist=state.itemlist.filter((item)=>{\r\n              console.log(item.area.toLowerCase().includes(searchKey));\r\n              return item.area.toLowerCase().includes(searchKey) ||item.category.toLowerCase().includes(searchKey) ||item.name.toLowerCase().includes(searchKey);\r\n            })\r\n        }\r\n        },\r\n      \r\n       \r\n    }\r\n})\r\n\r\n\r\nexport const {setToAdd,addTOList,deleteToList,searchtoList} =shopSlice.actions;\r\nexport default shopSlice.reducer;"]},"metadata":{},"sourceType":"module"}